/*
 * Copyright (C) 2024 Syntarou YOSHIDA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.midimixer.libs.swing;

import com.sun.jdi.connect.ListeningConnector;
import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.JWindow;
import jp.synthtarou.midimixer.libs.common.MXUtil;
import jp.synthtarou.midimixer.libs.navigator.MXPopupForList;
import jp.synthtarou.midimixer.libs.wraplist.MXWrapList;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class MXPianoRollControl extends javax.swing.JFrame {

    MXPianoRoll _roll;
    MXWrapList<Integer> listColor = new MXWrapList();
    MXWrapList<Integer> listMagin = new MXWrapList();
    MXWrapList<Integer> listSpan = new MXWrapList();

    /**
     * Creates new form NewJFrame
     */
    public MXPianoRollControl(MXPianoRoll roll) {
        initComponents();
        _roll = roll;
        MXUtil.centerWindow(this);
        jLabelDummy.setText("");
        
        jTextFieldColor.setEditable(false);
        jTextFieldMargin.setEditable(false);
        jTextFieldSpan.setEditable(false);

        listColor.addNameAndValue("Color", -1);
        for (int ch = 0; ch < 16; ++ ch) {
            listColor.addNameAndValue("Ch " +(ch+1), ch);
        }
        for (int margin = 0; margin <= 2000; margin += 300) {
            listMagin.addNameAndValue(margin + " msec", margin);
        }
        for (int span = 2000; span <= 6000; span += 1000) {
            listSpan.addNameAndValue((span / 1000) + " sec", span);
        }
        
        jTextFieldColor.setText(listColor.nameOfValue(_roll.getFocuChannel()));
        MXPopupForList<Integer> popupForColor = new MXPopupForList<Integer>(jTextFieldColor, listColor) {
            @Override
            public void approvedIndex(int selectedIndex) {
                int value = listColor.valueOfIndex(selectedIndex);
                _roll.setFocusChannel(value);
                jTextFieldColor.setText(listColor.nameOfValue(_roll.getFocuChannel()));
            }
        };
        jTextFieldMargin.setText(listMagin.nameOfValue((int)_roll.getSoundMargin()));
        MXPopupForList<Integer> popupForMargin = new MXPopupForList<Integer>(jTextFieldMargin, listMagin) {
            @Override
            public void approvedIndex(int selectedIndex) {
                int value = listMagin.valueOfIndex(selectedIndex);
                _roll.setSoundMargin(value);
                jTextFieldMargin.setText(listMagin.nameOfValue((int)_roll.getSoundMargin()));
            }
        };
        jTextFieldSpan.setText(listSpan.nameOfValue((int)_roll.getSoundSpan()));
        MXPopupForList<Integer> popupForSpan = new MXPopupForList<Integer>(jTextFieldSpan, listSpan) {
            @Override
            public void approvedIndex(int selectedIndex) {
                int value = listSpan.valueOfIndex(selectedIndex);
                _roll.setSoundSpan(value);
                jTextFieldSpan.setText(listSpan.nameOfValue((int)_roll.getSoundSpan()));
            }
        };
        setPreferredSize(new Dimension(300, 70));

        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldColor = new javax.swing.JTextField();
        jTextFieldMargin = new javax.swing.JTextField();
        jTextFieldSpan = new javax.swing.JTextField();
        jLabelDummy = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Color");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("NoteOn Margin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Screen Span");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jTextFieldColor, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jTextFieldMargin, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jTextFieldSpan, gridBagConstraints);

        jLabelDummy.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabelDummy, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDummy;
    private javax.swing.JTextField jTextFieldColor;
    private javax.swing.JTextField jTextFieldMargin;
    private javax.swing.JTextField jTextFieldSpan;
    // End of variables declaration//GEN-END:variables
}
