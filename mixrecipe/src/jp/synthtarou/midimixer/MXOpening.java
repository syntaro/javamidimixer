/*
 * Copyright 2023 Syntarou YOSHIDA.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.midimixer;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import javax.swing.SwingUtilities;
import jp.synthtarou.midimixer.libs.common.MXUtil;
import jp.synthtarou.midimixer.libs.swing.MXSwingPiano;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class MXOpening extends javax.swing.JDialog {

    MXSwingPiano _piano;

    public static MXOpening showAsStartup(Frame parent) {
        MXOpening dialog = new MXOpening(parent, false);
        dialog.setTitle("Please wait.");
        dialog.setAlwaysOnTop(true);
        dialog.pack();
        dialog.setSize(500, 400);
        MXUtil.centerWindow(dialog);
        return dialog;
    }

    public MXOpening(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        _piano = new MXSwingPiano();
        StringBuffer text = new StringBuffer();
        text.append(MXAppConfig.MX_APPNAME + "\n");
        text.append("Compiled with OpenJDK 20 + NetBeans IDE18\n");
        text.append("\n");
        text.append(("Copyright(C) SynthTAROU.\n"));
        text.append(("Thank you for Trial.\n"));
        text.append("\n");
        text.append(("I wish  You have Fun.\n"));
        jTextArea1.setText(text.toString());
        jTextArea1.setEditable(false);

        _piano.setPreferredSize(new Dimension(480, 90));
        _piano.setNoteRange(0, 3);
        _piano.setSelectedColor(MXUtil.mixtureColor(Color.white, 30, Color.green, 50, Color.yellow, 20));
        jPanelPiano.add(_piano);
        Thread pianoColor = new Thread() {
            public void run() {
                int x = 0;
                while (true) {
                    try {
                        Thread.sleep(8);
                    }catch(InterruptedException e) {
                        
                    }
                    x += 1;
                    if (x >= 0 && x <= 36) {
                        _piano.selectNote(x, true);
                    } else if (x >= 37 && x <= 72) {
                        int y = 72 - x;
                        _piano.selectNote(y, true);
                    } else {
                        x = 0;
                    }
                    if (_pianoStop) {
                        _piano.selectNote(40, true);
                    }
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            _piano.invalidate();
                            _piano.repaint();
                        }
                    });
                    if (_pianoStop) {
                        break;
                    }
                }
            }
        };
        pianoColor.start();
    }

    boolean _pianoStop = false;
    int _pianoProgress = -1;
    int _lastNote = 0;

    public void stopProgress() {
        _pianoStop = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanelPiano = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("I wish you have fun.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jPanelPiano.setLayout(new javax.swing.BoxLayout(jPanelPiano, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanelPiano, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelPiano;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
