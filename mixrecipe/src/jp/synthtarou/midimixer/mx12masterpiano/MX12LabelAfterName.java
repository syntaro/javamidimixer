/*
 * Copyright (C) 2024 Syntarou YOSHIDA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.midimixer.mx12masterpiano;

import java.util.ArrayList;
import javax.swing.SpinnerNumberModel;
import jp.synthtarou.libs.namedobject.MXNamedObjectList;
import jp.synthtarou.libs.namedobject.MXNamedObjectListFactory;
import jp.synthtarou.midimixer.MXMain;
import jp.synthtarou.midimixer.libs.midi.MXReceiver;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class MX12LabelAfterName extends javax.swing.JPanel {

    MX12Process _process;
    int _stopFeedback = 1;

    MXNamedObjectList<MXReceiver> _modelReceiver;
    MXNamedObjectList<Integer> _modelPort;
    MXNamedObjectList<Integer> _modelChannel;

    /**
     * Creates new form MX12LabelAfterName
     */
    public MX12LabelAfterName(MX12Process process) {
        initComponents();
        _process = process;

        _stopFeedback--;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jComboBoxReciever = new javax.swing.JComboBox<>();
        jComboBoxPort = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxChannel = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerMouseVelocity = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabelAuto = new javax.swing.JLabel();
        jCheckBoxHold = new javax.swing.JCheckBox();
        jLabelChord = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Receiver");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel1, gridBagConstraints);

        jComboBoxReciever.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRecieverActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jComboBoxReciever, gridBagConstraints);

        jComboBoxPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPortActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jComboBoxPort, gridBagConstraints);

        jLabel3.setText("Channel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel3, gridBagConstraints);

        jComboBoxChannel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxChannelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jComboBoxChannel, gridBagConstraints);

        jLabel4.setText("Velocity(Mouse)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel4, gridBagConstraints);

        jSpinnerMouseVelocity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMouseVelocityStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        add(jSpinnerMouseVelocity, gridBagConstraints);

        jLabel2.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel2, gridBagConstraints);

        jLabelAuto.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        add(jLabelAuto, gridBagConstraints);

        jCheckBoxHold.setText("Hold");
        jCheckBoxHold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHoldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jCheckBoxHold, gridBagConstraints);

        jLabelChord.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        add(jLabelChord, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxRecieverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRecieverActionPerformed
        if (_stopFeedback > 0) {
            return;
        }
        int index = jComboBoxReciever.getSelectedIndex();
        MXReceiver receiver = _modelReceiver.valueOfIndex(index);
        _process.setNextReceiver(receiver);
        updateReceiverName();
    }//GEN-LAST:event_jComboBoxRecieverActionPerformed

    private void jComboBoxPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPortActionPerformed
        if (_stopFeedback > 0) {
            return;
        }
        int index = jComboBoxPort.getSelectedIndex();
        int port = _modelPort.valueOfIndex(index);
        _process._mousePort = port;
    }//GEN-LAST:event_jComboBoxPortActionPerformed

    private void jComboBoxChannelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxChannelActionPerformed
        if (_stopFeedback > 0) {
            return;
        }
        int index = jComboBoxChannel.getSelectedIndex();
        int channel = _modelChannel.valueOfIndex(index);
        _process._mouseChannel = channel;
     }//GEN-LAST:event_jComboBoxChannelActionPerformed

    private void jSpinnerMouseVelocityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMouseVelocityStateChanged
        if (_stopFeedback > 0) {
            return;
        }
        int velocity = (int)jSpinnerMouseVelocity.getValue();
        _process._mouseVelocity = velocity;
     }//GEN-LAST:event_jSpinnerMouseVelocityStateChanged

    private void jCheckBoxHoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHoldActionPerformed
        _process._view.clearSelectedNote();
        boolean selectable = jCheckBoxHold.isSelected();
        _process._view._piano.setAllowSelect(selectable, selectable);
    }//GEN-LAST:event_jCheckBoxHoldActionPerformed

    public void updateReceiverName() {
        StringBuilder info = new StringBuilder();
        if (_process.getNextReceiver() != null) {
            jLabelAuto.setText("");
        } else {
            MXReceiver autoRec = MXMain.getMain().getAutoSendableReceiver();
            String name = "(auto=" + autoRec.getReceiverName() + ")";
            jLabelAuto.setText(name);
        }
    }
    
    public void reloadSetting() {
        _stopFeedback ++;
        try {
            updateReceiverName();
            
            _modelReceiver = MXMain.getMain().listSendableReceiver();
            _modelPort = MXNamedObjectListFactory.listupPort(null);
            _modelChannel= MXNamedObjectListFactory.listupChannel(null);
            
            jComboBoxPort.setModel(_modelPort);
            jComboBoxPort.setSelectedIndex(_modelPort.indexOfValue(_process._mousePort));
            jComboBoxChannel.setModel(_modelChannel);
            jComboBoxChannel.setSelectedIndex(_modelChannel.indexOfValue(_process._mouseChannel));
            jComboBoxReciever.setModel(_modelReceiver);
            jComboBoxReciever.setSelectedIndex(_modelReceiver.indexOfValue(_process.getNextReceiver()));
            jSpinnerMouseVelocity.setModel(new SpinnerNumberModel(_process._mouseVelocity, 0, 127, 1));
        }
        finally {
            _stopFeedback --;
        }
    }
    
    public void setChordNames(String chord) {
        if (chord == null || chord.isEmpty()) {
            jLabelChord.setText("-");
        }
        else {
            jLabelChord.setText(chord);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxHold;
    private javax.swing.JComboBox<String> jComboBoxChannel;
    private javax.swing.JComboBox<String> jComboBoxPort;
    private javax.swing.JComboBox<String> jComboBoxReciever;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAuto;
    private javax.swing.JLabel jLabelChord;
    private javax.swing.JSpinner jSpinnerMouseVelocity;
    // End of variables declaration//GEN-END:variables
}
