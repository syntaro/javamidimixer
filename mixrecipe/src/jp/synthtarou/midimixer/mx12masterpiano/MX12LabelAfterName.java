/*
 * Copyright (C) 2024 Syntarou YOSHIDA
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.midimixer.mx12masterpiano;

import javax.swing.SpinnerNumberModel;
import jp.synthtarou.libs.MXUtil;
import jp.synthtarou.midimixer.MXConfiguration;
import jp.synthtarou.midimixer.libs.midi.MXMessage;
import jp.synthtarou.midimixer.libs.midi.MXMessageFactory;
import jp.synthtarou.midimixer.libs.midi.MXMidi;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class MX12LabelAfterName extends javax.swing.JPanel {

    MX12Process _process;
    
    /**
     * Creates new form MX12LabelAfterName
     */
    public MX12LabelAfterName(MX12Process process) {
        initComponents();
        _process = process;
        jSpinnerCCNumber.setModel(new SpinnerNumberModel(7, 0, 127, 1));
        jSpinnerCCValue.setModel(new SpinnerNumberModel(127, 0, 127, 1));
         viewMeanOfCC();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerCCNumber = new javax.swing.JSpinner();
        jSpinnerCCValue = new javax.swing.JSpinner();
        jLabelCCMean = new javax.swing.JLabel();
        jButtonSendCCNow = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Send Custom CC");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("Value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        add(jLabel2, gridBagConstraints);

        jSpinnerCCNumber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCCNumberStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        add(jSpinnerCCNumber, gridBagConstraints);

        jSpinnerCCValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCCValueStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        add(jSpinnerCCValue, gridBagConstraints);

        jLabelCCMean.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(jLabelCCMean, gridBagConstraints);

        jButtonSendCCNow.setText("SendNow");
        jButtonSendCCNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendCCNowActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        add(jButtonSendCCNow, gridBagConstraints);

        jButtonEdit.setText("Customize");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(jButtonEdit, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinnerCCNumberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCCNumberStateChanged
        viewMeanOfCC();
    }//GEN-LAST:event_jSpinnerCCNumberStateChanged

    private void jSpinnerCCValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCCValueStateChanged
        viewMeanOfCC();
    }//GEN-LAST:event_jSpinnerCCValueStateChanged

    private void jButtonSendCCNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendCCNowActionPerformed
        sendCC();
    }//GEN-LAST:event_jButtonSendCCNowActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        MX12MasterPanelEditor editor = new MX12MasterPanelEditor(_process);
        MXUtil.showAsDialog(this, editor, MXConfiguration.MX_APPLICATION);
    }//GEN-LAST:event_jButtonEditActionPerformed

    public void viewMeanOfCC() {
        int ccNumber = (Integer)jSpinnerCCNumber.getValue();
        int ccValue = (Integer)jSpinnerCCValue.getValue();
        String name = MXMidi.nameOfControlChange(ccNumber);
        String text = "CC#" + ccNumber + "[" + name + "] = "+ ccValue;
        jLabelCCMean.setText(text);
    }

    public void sendCC() {
        int ccNumber = (Integer)jSpinnerCCNumber.getValue();
        int ccValue = (Integer)jSpinnerCCValue.getValue();
        MXMessage mesasge = MXMessageFactory.fromShortMessage(_process.getMousePort(), MXMidi.COMMAND_CH_CONTROLCHANGE + _process.getMouseChannel(), ccNumber, ccValue);
        _process.sentMessageByMouse(mesasge);
    }

    public void setButtonText(String text) {
        jButtonEdit.setText(text);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSendCCNow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCCMean;
    private javax.swing.JSpinner jSpinnerCCNumber;
    private javax.swing.JSpinner jSpinnerCCValue;
    // End of variables declaration//GEN-END:variables
}
