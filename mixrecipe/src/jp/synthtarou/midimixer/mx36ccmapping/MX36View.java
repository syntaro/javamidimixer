/*
 * Copyright 2023 Syntarou YOSHIDA.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.midimixer.mx36ccmapping;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import jp.synthtarou.midimixer.libs.wraplist.MXWrapList;
import jp.synthtarou.midimixer.libs.navigator.MXPopupForList;
import jp.synthtarou.midimixer.libs.navigator.MXPopupForText;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class MX36View extends javax.swing.JPanel {

    MX36Process _process;
    MX36StatusDetailPanel _detailPanel;
    MX36StatusListPanel _listPanel;

    /**
     * Creates new form MX36View
     */
    public MX36View(MX36Process process, MX36FolderList list) {
        initComponents();
        _process = process;
        _detailPanel = new MX36StatusDetailPanel(process);
        jPanel2.add(_detailPanel);
        jPanel2.setBorder(BorderFactory.createEmptyBorder());
        _listPanel = new MX36StatusListPanel(list);
        jPanel3.add(_listPanel);
    }

    public void fullReloadList() {
        jPanel3.remove(_listPanel);
        _listPanel = new MX36StatusListPanel(_process._folders);
        jPanel3.add(_listPanel);
        _listPanel.revalidate();
        jPanel3.revalidate();
    }

    public void focusStatus(MX36Status status) {
        _detailPanel.updateViewByStatus(status);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pickuped"));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    public void startCreateFolder(JButton button) {
        MXPopupForText navi = new MXPopupForText(null) {

            @Override
            public void approvedText(String text) {
                if (_process._folders.getFolder(text) != null) {
                    JOptionPane.showMessageDialog(MX36View.this, "Already Exists", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                MX36Folder newFolder = _process._folders.newFolder(text);
                _process.moveFolder(newFolder, _detailPanel._status);
                if (_process._view != null) {
                    _process._view.fullReloadList();
                }
            }
        };
        navi.setDialogTitle("Input Folder Name");
        navi.showPopup(button);
    }

    public void startMoveFolder(JButton button) {
        if (_detailPanel._status == null) {
            return;
        }
        MXWrapList<MX36Folder> listFolder = new MXWrapList<>();
        for (MX36Folder folder : _process._folders._listFolder) {
            listFolder.addNameAndValue(folder._folderName, folder);
        }
        listFolder.addNameAndValue("...", null);
        MXPopupForList<MX36Folder> navi = new MXPopupForList<MX36Folder>(null, listFolder) {
            @Override
            public void approvedIndex(int selectedIndex) {
                MX36Folder ret = listFolder.valueOfIndex(selectedIndex);
                if (ret != null) {
                    _process.moveFolder(ret, _detailPanel._status);
                }
                else {
                    startCreateFolder(button);
                }
            }
        };
       
        navi.showPopup(button);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
