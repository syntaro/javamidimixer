/*
 * Copyright (C) 2024 yaman
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.libs.log;

import java.awt.Dimension;
import java.util.logging.Level;
import jp.synthtarou.libs.MXSafeThread;
import jp.synthtarou.libs.MXUtil;

/**
 *
 * @author yaman
 */
public class LoggerDemo extends javax.swing.JPanel {

    public static void main(String[] args) {
        MXUtil.showAsDialog(null, new LoggerDemo(), "Demo");
        System.exit(0);
    }

    /**
     * Creates new form LoggerTest
     */
    public LoggerDemo() {
        initComponents();
        MXFileLogger logger = MXFileLogger._instance;
        logger.installJList(jList1);

        setPreferredSize(new Dimension(400, 300));

        MXFileLogger.getLogger(MXFileLogger.class
        ).warning("**ワーニング");
        MXFileLogger.getLogger(MXFileLogger.class
        ).info("**インフォ");
        MXFileLogger.getLogger(MXFileLogger.class
        ).severe("**エラー");
        Throwable e = new RuntimeException("test runtime error");

        MXFileLogger.getLogger(MXFileLogger.class
        ).log(Level.INFO, e.getMessage(), e);
        MXFileLogger.getLogger(MXFileLogger.class
        ).info("**COMPLETE");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton100 = new javax.swing.JButton();
        jButton200 = new javax.swing.JButton();
        jButton300 = new javax.swing.JButton();
        jCheckBoxPause = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

        jButton100.setText("100-199");
        jButton100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton100ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        add(jButton100, gridBagConstraints);

        jButton200.setText("200-299");
        jButton200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton200ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        add(jButton200, gridBagConstraints);

        jButton300.setText("300-400");
        jButton300.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton300ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        add(jButton300, gridBagConstraints);

        jCheckBoxPause.setText("pause");
        jCheckBoxPause.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxPauseItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        add(jCheckBoxPause, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    public void fillLogLine(int from, int to, int span) {
        for (int i = from; i <= to; ++i) {
            MXFileLogger.getLogger(String.class).info("" + i);
            try {
                Thread.sleep(span);
            } catch (InterruptedException ex) {

            }
        }
    }
    
    private void jButton100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton100ActionPerformed
        new MXSafeThread("1", new Runnable() {
            @Override
            public void run() {
                fillLogLine(100, 199, 100);
            }
        }).start();
    }//GEN-LAST:event_jButton100ActionPerformed

    private void jButton200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton200ActionPerformed
        new MXSafeThread("1", new Runnable() {
            @Override
            public void run() {
                fillLogLine(200, 299, 200);
            }
        }).start();
    }//GEN-LAST:event_jButton200ActionPerformed

    private void jButton300ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton300ActionPerformed
        new MXSafeThread("1", new Runnable() {
            @Override
            public void run() {
                fillLogLine(300, 399, 300);
            }
        }).start();
    }//GEN-LAST:event_jButton300ActionPerformed

    private void jCheckBoxPauseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxPauseItemStateChanged
        if (jCheckBoxPause.isSelected()) {
            MXFileLogger._instance.pauseUpdateJList(true);
        } else {
            MXFileLogger._instance.pauseUpdateJList(false);
        }
    }//GEN-LAST:event_jCheckBoxPauseItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton100;
    private javax.swing.JButton jButton200;
    private javax.swing.JButton jButton300;
    private javax.swing.JCheckBox jCheckBoxPause;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
